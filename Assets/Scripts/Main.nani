

@gosub .resetAllVariables
@gosub .eventqueue
@stop

; ###VARIABLES
#resetAllVariables
@set p_turn=1
@set p_age=25
@set p_sex=male
@set p_health=50
@set p_fame=0
@set p_mana=100
@set p_happiness=100
@set p_money=1000
@set p_monthlyCashFlow=0
@set p_title="-"
@set p_missionsCompleted=0
@set p_maxhealth=100
@set p_networth=100

@set p_stat_str=1
@set p_stat_vit=1
@set p_stat_dex=1
@set p_stat_int=1
@set p_stat_wis=1
@set p_stat_char=1

@set p_merchantS=0
@set p_aventurerS=0
@set p_soldierS=0

@set p_currentInjuries=0



@set lover_sl_1="EMPTY!-!-!-!0!0!0"
@set friend_sl_1="NELSON!HU!MA!1!20!1!100"
@set friend_sl_2="EMPTY!-!-!-!0!0!0"
@set friend_sl_3="EMPTY!-!-!-!0!0!0"

@set lover_slavailable_1=false
@set friend_slavailable_1=true
@set friend_slavailable_2=false
@set friend_slavailable_3=false

@set p_livingmethod=0

@set securityCompany=0
@set alchemyCompany=0
@set travelMerchant=0

@set actionLog="INACTION"
@set _=false
@set isLog=false

@set absolute_date="date"

; For now limit to just one event flag, we can later think of multiple events happening
@set flag_number=0
@set lastmenu=1

; @set _={workAsMerchant()}
; @set _={workAsAventurer()}
; @set _={workAsSoldier()}

@return

#eventqueue
; if eventflag=x then...


@goto .flag_log if:isLog==true

@goto .flag_death_money if:flag_number==4

@goto .flag_death_health if:flag_number==1
@goto .flag_death_happiness if:flag_number==2



@goto .profile if:lastmenu==1
@goto .market if:lastmenu==2
@goto .job if:lastmenu==3
@goto .relationship if:lastmenu==4


@goto .eventqueue
@stop


#updateVariables
@set absolute_date="{getAbsoluteDate()}"
@return

#profile
@set lastmenu=1
@resetText
@gosub .printMainStatus
; "Age: {p_age}"
; "STR: {p_stat_str} HP: {p_stat_vit} DEX: {p_stat_dex} INT: {p_stat_int} "
@gosub .printMenuChoices
@stop


;Copy for all files cause you can't import
#printMainStatus
@gosub .updateVariables
@showUI StatusBar
; "health: {p_health} Happinness: {p_happiness} Money: {p_money} Turn: {p_turn}, {absolute_date} Cashflow: {p_monthlyCashFlow}" 
@return

#printMenuChoices
@clearChoice
; @choice "Profile" goto:.profile
; @choice "Market" goto:.market 
; @choice "Jobs" goto:.job
; @choice "Relationship" goto:.relationship
; @choice "Take a break" goto:.takeABreak
@choice button:ChoiceButtons/BtnStore pos:850,300 handler:ButtonArea goto:.market
@choice button:ChoiceButtons/BtnJobs pos:850,150 handler:ButtonArea goto:.job
@choice button:ChoiceButtons/BtnProfile pos:850, 0 handler:ButtonArea goto:.profile
@choice button:ChoiceButtons/BtnBreak pos:850,-150 handler:ButtonArea goto:.takeABreak
@choice button:ChoiceButtons/BtnRelationship pos:840,-300 handler:ButtonArea goto:.relationship
@choice button:ChoiceButtons/BtnAnim pos:840,-450 handler:ButtonArea goto:.relationship
@return

; //////////////////////////////////////// ###JOB
#job
@set lastmenu=3
@hideAll
@resetText
@back bg-guild
@char guild_girl look:left pos:45,-60
"What will you be doing this week?"
@gosub .printMainStatus
@gosub .printMenuChoices
@gosub .printJobChoices
@stop

#takeABreak
@resetText
@set _={increaseTurn()}
@set p_happiness=100 
"You took a nice break"
@goto .eventqueue
@return




;Here it should show the jobs that are available there for example, work on the granja and stuff like that
#printJobChoices
@choice "Work as {getCareerData(1, "d")} Soldier $ {getCareerData(1, "f")}, {getCareerData(1, "e")}  to level up" goto:.workSoldier
@choice "Work as {getCareerData(2, "d")} Aventurer $ {getCareerData(2, "f")}, {getCareerData(2, "e")}  to level up" goto:.workAventurer
@choice "Work as {getCareerData(3, "d")} Merchant $ {getCareerData(3, "f")}, {getCareerData(3, "e")}  to level up" goto:.workMerchant
@return

#workSoldier
@set _={workCareerAs(1)}
"You worked as soldier"
@goto .eventqueue
@return

#workAventurer
@set _={workCareerAs(2)}
"You worked as Aventurer"
@goto .eventqueue
@return

#workMerchant
@set _={workCareerAs(3)}
"You worked as Merchant"
@goto .eventqueue
@return

; //////////////////////////////////////// ####MARKET

#market
@set lastmenu=2
@resetText
@hideAll
@back bg-store
@char merchant look:left pos:45,-40
"What would you like to purchase?"
@spawn DepthOfField params:merchant
@showUI StoreMenu
@set basic_store=true
@save
@hidePrinter
@gosub .printMainStatus 
@gosub .printMenuChoices
; @gosub .buildingMarketOptions
@gosub .buildingBusinessOptions
; @gosub .itemOptions
@stop


#equipmentMarket
@resetText
@gosub .printMainStatus 
@choice "Buy Axe"
@choice "Buy Sword"
@choice "go back" goto:.market
@stop


#buildingMarket
@resetText
@gosub .printMainStatus 
@gosub .buildingMarketOptions
@choice "go back" goto:.market
@stop


#buildingMarketOptions
@choice "Camping -CF: 0$ " gosub:.rentCamp
@choice "Rent roof in a farm -CF -2$" gosub:.rentFarm
@choice "Rent a tavern room -CF -5$" gosub:.rentTavern
@choice "Rent A Cabin -CF -15$" gosub:.rentCabin
@return

#rentCamp
@set p_livingmethod=0

@goto .eventqueue
@stop
#rentFarm
@set p_livingmethod=1
@goto .eventqueue
@stop
#rentTavern
@set P_livingmethod=2
@goto .eventqueue
@stop

#rentCabin
@set p_livingmethod=3
@goto .eventqueue
@stop


#buildingBusinessOptions
@choice "Purchase Security Company: 500$ CF: 50" gosub:.BUYsecurityCompany 
@choice "Purchase Alchemy Company: 1000$ CF: 110" gosub:.BUYalchemyCompany
@choice "Purchase International Merchant Network: 2000$ CF: 250" gosub:.BUYtravelMerchant

@return

#BUYsecurityCompany
@set _={purchaseBusiness(1)}
@goto .eventqueue
@stop

#BUYalchemyCompany
@set _={purchaseBusiness(2)}
@goto .eventqueue
@stop

#BUYtravelMerchant
@set _={purchaseBusiness(3)}
@goto .eventqueue
@return


#rentCabin
@set {p_livingmethod=3}
@goto .eventqueue
@stop



#itemOptions
@choice "Medicinal Herbs: $50"
@choice "Healing Aid Kit: $150 " gosub:.BUYhealingKit
@choice "Potion: $500" gosub:.BUYpotion
@return

#BUYhealingKit
; Set the Healing success variable later
@toast "Healing kit adquired"
@set _={purchaseItem(1)}
@goto .eventqueue
@return

#BUYpotion
@toast "Health potion adquired"
@set _={purchaseItem(2)}
@goto .eventqueue
@return

#itemMarket
@resetText
@gosub .printMainStatus 
@gosub .itemOptions
@choice "go back" goto:.market
@stop



; //////////////////////////////////////// ###TRAINNING
#trainning
@resetText
@gosub .printMainStatus 
@choice "Militar Academy"
@choice "Magic Academy"

@stop


; //////////////////////////////////////// ###RELATIONSHIP
#relationship
@set lastmenu=4
@resetText

@gosub .printMainStatus 
@gosub .printMenuChoices
;TODO make it only show if the pplayer adquired a certain status
@choice "Spend time with  {getPersonData(2,"a")} {getPersonData(2,"g")} " if:lover_slavailable_1 goto:.visit_lover_1
@choice "Invite drinks to all friends" goto:.allfriends
@choice "Visit1 {getPersonData(3,"a")} {getPersonData(3,"g")}" if:friend_slavailable_1 goto:.visit_friend_1
@choice "Visit2 {getPersonData(4,"a")} {getPersonData(4,"g")}" if:friend_slavailable_2 goto:.visit_friend_2
@choice "Visit3 {getPersonData(5,"a")} {getPersonData(5,"g")}" if:friend_slavailable_3 goto:.visit_friend_3

@stop

#visit_lover_1
@resetText
@hideAll
@back bg-house
@char wife look:left pos:45,-10
you visited your wife
@goto .eventqueue

#allfriends
@resetText
@hideAll
@back bg-tavern
@char p1 pos:15,-20 scale:3 look:right
@char p3 pos:35,-20 scale:3 look:right if:friend_slavailable_2
@char p2 pos:50,-20 scale:3 if:friend_slavailable_1
@char p4 pos:65,-20 scale:3 if:friend_slavailable_3
You spend a great time with your friends
@goto .eventqueue


#visit_friend_1
@resetText
@hideAll
@back bg-house1
@char p2 pos:55,-20 scale:3
you visited your friend
@goto .eventqueue

#visit_friend_2
@resetText
@hideAll
@back bg-house2
@char p3
you visited your friend
@goto .eventqueue

#visit_friend_3
@resetText
@hideAll
@back bg-house3
@char p4
you visited your friend
@goto .eventqueue






; ###EVENTS

#flag_death_health
You died...
@goto .cleanandqueue

#flag_death_happiness
You died out of sadness...
@goto .cleanandqueue

#flag_death_money
Debt Collectors collected your head...
@goto .cleanandqueue

#flag_tooexpensive
Too expensive... You don't have the money
@goto .cleanandqueue

#cleanandqueue
@set flag_number=0
@goto .eventqueue

#flag_log
@print text:"{actionLog}" 
@set isLog=false
@goto .eventqueue
